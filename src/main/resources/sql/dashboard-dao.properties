getProjectsCountQuery=SELECT  DATENAME(MONTH, DATEADD(MONTH, all_months.month - 1, '1900-01-01')) AS month,COALESCE(plan_counts.total_count, 0) AS total_count FROM (SELECT 1 AS month UNION SELECT 2  UNION SELECT 3  UNION SELECT 4 UNION SELECT 5 UNION SELECT 6  UNION SELECT 7 UNION SELECT 8 UNION SELECT 9  UNION SELECT 10  UNION SELECT 11 UNION SELECT 12) AS all_months LEFT JOIN (SELECT DATEPART(MONTH, INSERT_DATE) AS month,COUNT(*) AS total_count FROM PROJECT WHERE  YEAR(INSERT_DATE) = YEAR(GETDATE()) GROUP BY  MONTH(INSERT_DATE)) AS plan_counts ON all_months.month = plan_counts.month where all_months.month <= MONTH(GETDATE()) ORDER BY all_months.month;

getExperimentsCountQuery=SELECT  DATENAME(MONTH, DATEADD(MONTH, all_months.month - 1, '1900-01-01'))AS month, COALESCE(exp_counts.total_count, 0) AS total_count FROM( SELECT 1 AS month UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10 UNION SELECT 11 UNION SELECT 12) AS all_months LEFT JOIN (SELECT DATEPART(MONTH, INSERT_DATE) AS month, COUNT(*) AS total_count FROM  EXPERIMENT WHERE  YEAR(INSERT_DATE) = YEAR(GETDATE()) GROUP BY  DATENAME(MONTH, INSERT_DATE),MONTH(INSERT_DATE)) AS exp_counts ON all_months.month = exp_counts.month where all_months.month <= MONTH(GETDATE()) ORDER BY all_months.month
getAnalysisExpCountQuery=SELECT  DATENAME(MONTH, DATEADD(MONTH, all_months.month - 1, '1900-01-01')) AS month,COALESCE(anl_counts.total_count, 0) AS total_count FROM  (SELECT 1 AS month UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8  UNION SELECT 9 UNION SELECT 10 UNION SELECT 11 UNION SELECT 12) AS all_months LEFT JOIN (SELECT DATEPART(MONTH, INSERT_DATE) AS month,COUNT(*) AS total_count FROM ANALYSIS_EXPERIMENT WHERE YEAR(INSERT_DATE) = YEAR(GETDATE()) GROUP BY  DATENAME(MONTH, INSERT_DATE),MONTH(INSERT_DATE)) AS anl_counts ON all_months.month = anl_counts.month where all_months.month <= MONTH(GETDATE()) ORDER BY all_months.month

#Formulation-Experiments-Status-Piechart
getExperimentByStatusQuery=SELECT exp_status, SUM(total_count) AS total_count FROM (SELECT CASE WHEN status = 'Inprogress' THEN 'In Progress' WHEN status = 'Complete' THEN 'Complete' WHEN status = 'Created TRF' THEN 'Created TRF' WHEN status = 'Analysis Submitted' THEN 'Analysis Submitted' WHEN status = 'COA Generated' THEN 'COA Generated' ELSE 'others' END AS exp_status, COUNT(*) AS total_count FROM EXPERIMENT WHERE YEAR(INSERT_DATE) = YEAR(GETDATE()) AND status IN ('Inprogress', 'Complete', 'Created TRF', 'Analysis Submitted', 'COA Generated') GROUP BY Status) AS subquery GROUP BY exp_status;

#TRF-By-Status-Piechart
getTrfByStatusQuery=SELECT TRF_STATUS, COUNT(*) AS total_count FROM (SELECT t.TRF_STATUS FROM TRF t LEFT JOIN EXPERIMENT Ex ON t.EXP_ID = ex.EXP_ID WHERE YEAR(t.INSERT_DATE) = YEAR(GETDATE()) AND t.TRF_STATUS <> 'active' GROUP BY t.TRF_STATUS, Ex.EXPERIMENT_NAME) AS subquery GROUP BY TRF_STATUS;
